{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class MultiFormComponent {\n  ngOnInit() {}\n  constructor(fb) {\n    this.fb = fb;\n    this.form1 = new FormBuilder().group({\n      name: [''],\n      email: [''],\n      password: ['']\n    });\n    this.form2 = new FormBuilder().group({\n      address: [''],\n      phone: ['']\n    });\n    this.form3 = new FormBuilder().group({\n      notes: ['']\n    });\n    this.activeStep = 0;\n  }\n  next() {\n    if (this.form1.valid && this.form2.valid) {\n      this.activeStep++;\n    }\n  }\n  submit() {\n    console.log(this.form1.value);\n    console.log(this.form2.value);\n    console.log(this.form3.value);\n  }\n}\nMultiFormComponent.ɵfac = function MultiFormComponent_Factory(t) {\n  return new (t || MultiFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nMultiFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MultiFormComponent,\n  selectors: [[\"app-multi-form\"]],\n  decls: 28,\n  vars: 3,\n  consts: [[1, \"step-one\"], [3, \"formGroup\"], [\"mat-form-field\", \"\", \"type\", \"text\", \"placeholder\", \"Name\", \"formControlName\", \"name\"], [\"mat-form-field\", \"\", \"type\", \"email\", \"placeholder\", \"Email\", \"formControlName\", \"email\"], [\"mat-form-field\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\"], [3, \"click\"], [1, \"step-two\"], [\"mat-form-field\", \"\", \"type\", \"text\", \"placeholder\", \"Address\", \"formControlName\", \"address\"], [\"mat-form-field\", \"\", \"type\", \"number\", \"placeholder\", \"Phone Number\", \"formControlName\", \"phone\"], [1, \"step-three\"], [\"mat-form-field\", \"\", \"type\", \"text\", \"placeholder\", \"Notes\", \"formControlName\", \"notes\"]],\n  template: function MultiFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Component-based Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"h2\");\n      i0.ɵɵtext(4, \"Step 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 1);\n      i0.ɵɵelement(6, \"input\", 2)(7, \"input\", 3)(8, \"input\", 4);\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function MultiFormComponent_Template_button_click_9_listener() {\n        return ctx.next();\n      });\n      i0.ɵɵtext(10, \"Next\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 6)(12, \"h2\");\n      i0.ɵɵtext(13, \"Step 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"form\", 1);\n      i0.ɵɵelement(15, \"input\", 7)(16, \"input\", 8);\n      i0.ɵɵelementStart(17, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function MultiFormComponent_Template_button_click_17_listener() {\n        return ctx.next();\n      });\n      i0.ɵɵtext(18, \"Next\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 9)(20, \"h2\");\n      i0.ɵɵtext(21, \"Step 3\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"form\", 1);\n      i0.ɵɵelement(23, \"input\", 10);\n      i0.ɵɵelementStart(24, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function MultiFormComponent_Template_button_click_24_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵtext(25, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function MultiFormComponent_Template_button_click_26_listener() {\n        return ctx.activeStep = 0;\n      });\n      i0.ɵɵtext(27, \"Reset\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.form1);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.form2);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.form3);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;;;AAS5C,OAAM,MAAOC,kBAAkB;EAE7BC,QAAQ,IAER;EAiBAC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAftB,UAAK,GAAG,IAAIJ,WAAW,EAAE,CAACK,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;IACF,UAAK,GAAG,IAAIR,WAAW,EAAE,CAACK,KAAK,CAAC;MAC9BI,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,KAAK,EAAE,CAAC,EAAE;KACX,CAAC;IACF,UAAK,GAAG,IAAIV,WAAW,EAAE,CAACK,KAAK,CAAC;MAC9BM,KAAK,EAAE,CAAC,EAAE;KACX,CAAC;IAEF,eAAU,GAAE,CAAC;EAEyB;EAEtCC,IAAI;IACF,IAAI,IAAI,CAACC,KAAK,CAACC,KAAK,IAAI,IAAI,CAACC,KAAK,CAACD,KAAK,EAAE;MACxC,IAAI,CAACE,UAAU,EAAE;;EAErB;EAEAC,MAAM;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC;IAC7BF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC;IAC7BF,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,KAAK,CAACD,KAAK,CAAC;EAC/B;;AAjCWnB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BC,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAE7BA,8BAAsB;MAChBA,sBAAM;MAAAA,iBAAK;MACfA,+BAA0B;MACxBA,2BAA4E;MAG5EA,iCAAyB;MAAjBA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;MAI1CA,+BAAsB;MAChBA,uBAAM;MAAAA,iBAAK;MACfA,gCAA0B;MACxBA,4BAAkF;MAElFA,kCAAyB;MAAjBA;QAAA,OAASC,UAAM;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;MAI1CA,+BAAwB;MAClBA,uBAAM;MAAAA,iBAAK;MACfA,gCAA0B;MACxBA,6BAA8E;MAC9EA,kCAA2B;MAAnBA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;MAI9CA,kCAAiC;MAAzBA;QAAA,wBAAsB,CAAC;MAAA,EAAC;MAACA,sBAAK;MAAAA,iBAAS;;;MAzBvCA,eAAmB;MAAnBA,qCAAmB;MAUnBA,eAAmB;MAAnBA,qCAAmB;MASnBA,eAAmB;MAAnBA,qCAAmB","names":["FormBuilder","MultiFormComponent","ngOnInit","constructor","fb","group","name","email","password","address","phone","notes","next","form1","valid","form2","activeStep","submit","console","log","value","form3","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/devops/Downloads/frontend/src/app/multi-form/multi-form.component.ts","/home/devops/Downloads/frontend/src/app/multi-form/multi-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-multi-form',\n  templateUrl: './multi-form.component.html',\n  styleUrls: ['./multi-form.component.css']\n})\nexport class MultiFormComponent implements OnInit{\n  \n  ngOnInit(): void {\n    \n  }\n\n  form1 = new FormBuilder().group({\n    name: [''],\n    email: [''],\n    password: ['']\n  });\n  form2 = new FormBuilder().group({\n    address: [''],\n    phone: ['']\n  });\n  form3 = new FormBuilder().group({\n    notes: ['']\n  });\n\n  activeStep =0;\n\n  constructor(private fb: FormBuilder) {}\n\n  next() {\n    if (this.form1.valid && this.form2.valid) {\n      this.activeStep++;\n    }\n  }\n\n  submit() {\n    console.log(this.form1.value);\n    console.log(this.form2.value);\n    console.log(this.form3.value);\n  }\n\n}\n","<h1>Component-based Form</h1>\n\n<div class=\"step-one\">\n  <h2>Step 1</h2>\n  <form [formGroup]=\"form1\">\n    <input mat-form-field type=\"text\" placeholder=\"Name\" formControlName=\"name\">\n    <input mat-form-field type=\"email\" placeholder=\"Email\" formControlName=\"email\">\n    <input mat-form-field type=\"password\" placeholder=\"Password\" formControlName=\"password\">\n    <button (click)=\"next()\">Next</button>\n  </form>\n</div>\n\n<div class=\"step-two\">\n  <h2>Step 2</h2>\n  <form [formGroup]=\"form2\">\n    <input mat-form-field type=\"text\" placeholder=\"Address\" formControlName=\"address\">\n    <input mat-form-field type=\"number\" placeholder=\"Phone Number\" formControlName=\"phone\">\n    <button (click)=\"next()\">Next</button>\n  </form>\n</div>\n\n<div class=\"step-three\">\n  <h2>Step 3</h2>\n  <form [formGroup]=\"form3\">\n    <input mat-form-field type=\"text\" placeholder=\"Notes\" formControlName=\"notes\">\n    <button (click)=\"submit()\">Submit</button>\n  </form>\n</div>\n\n<button (click)=\"activeStep = 0\">Reset</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}